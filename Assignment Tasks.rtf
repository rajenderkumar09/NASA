{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Arial-BoldMT;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue0;
\red11\green97\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0\c60000;
\cssrgb\c0\c48235\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl500\partightenfactor0

\f0\b\fs64 \cf2 \cb3 \expnd0\expndtw0\kerning0
Assignment for React Native\cb1 \
\pard\pardeftab720\sl500\partightenfactor0

\f1\b0\fs32 \cf4 \cb3 Create an application in React Native where the application will:\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Sign up in{\field{\*\fldinst{HYPERLINK "https://https//api.nasa.gov"}}{\fldrslt \cf5 \'a0}}{\field{\*\fldinst{HYPERLINK "https://api.nasa.gov/"}}{\fldrslt 
\f0\b \cf5 https://api.nasa.gov/}}\'a0to get an API key.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
When the user opens the application, the user sees a form that contains one text input and a submit button. Use `Enter Asteroid ID` as a placeholder text in the text input form field. The user also sees another button called `Random Asteroid`\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
The submit button is disabled if text input is empty.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
When the user enters an asteroid id in the input field and presses submit, make a call to\'a0{\field{\*\fldinst{HYPERLINK "https://api.nasa.gov/neo/rest/v1/neo/%7B%7BENTER_ASTEROID_ID_HERE%7D%7D?api_key=%7B%7BYOUR_API_KEY%7D%7D"}}{\fldrslt \cf5 https://api.nasa.gov/neo/rest/v1/neo/\{\{ENTER_ASTEROID_ID_HERE\}\}?api_key=\{\{YOUR_API_KEY\}\}}}\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
The user is taken to a screen that now displays the information about the asteroid. Display the following information:\cb1 \uc0\u8232 \cb3 - name\cb1 \uc0\u8232 \cb3 - nasa_jpl_url\cb1 \uc0\u8232 \cb3 - is_potentially_hazardous_asteroid\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	6.	}\expnd0\expndtw0\kerning0
When the user clicks the `Random Asteroid` button, make a call to\'a0{\field{\*\fldinst{HYPERLINK "https://api.nasa.gov/neo/rest/v1/neo/browse?api_key=DEMO_KEY"}}{\fldrslt \cf5 https://api.nasa.gov/neo/rest/v1/neo/browse?api_key=DEMO_KEY}}. Select RANDOM asteroid id. Pass ID to\'a0{\field{\*\fldinst{HYPERLINK "https://api.nasa.gov/neo/rest/v1/neo/%7B%7BENTER_ASTEROID_ID_HERE%7D%7D?api_key=%7B%7BYOUR_API_KEY%7D%7D"}}{\fldrslt \cf5 https://api.nasa.gov/neo/rest/v1/neo/\{\{ENTER_ASTEROID_ID_HERE\}\}?api_key=\{\{YOUR_API_KEY\}\}}}\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	7.	}\expnd0\expndtw0\kerning0
The user is taken to a screen that now displays the information about the asteroid. Display the following information:\'a0\cb1 \uc0\u8232 \cb3 - name\cb1 \uc0\u8232 \cb3 - nasa_jpl_url\cb1 \uc0\u8232 \cb3 - is_potentially_hazardous_asteroid\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	8.	}\expnd0\expndtw0\kerning0
Style application
\f0\b \'a0
\f1\b0 using\'a0{\field{\*\fldinst{HYPERLINK "https://nativebase.io/"}}{\fldrslt \cf5 nativebase.io}}\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	9.	}\expnd0\expndtw0\kerning0
Generate APK and IPA files.\cb1 \
}